version: '3.8'

services:
  # Production PostgreSQL with persistent volumes
  postgres:
    image: postgres:15-alpine
    container_name: steam-postgres-prod
    environment:
      POSTGRES_DB: steam_clone
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - steam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d steam_clone"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Production Redis
  redis:
    image: redis:7-alpine
    container_name: steam-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - steam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Production Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: steam-elasticsearch-prod
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - steam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Production Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: steam-zookeeper-prod
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - steam-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: steam-kafka-prod
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - steam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Production API Gateway
  api-gateway:
    image: ${REGISTRY}/${IMAGE_NAME}:latest
    container_name: steam-api-gateway-prod
    environment:
      - USER_SERVICE_URL=http://user-service:8001
      - GAME_CATALOG_SERVICE_URL=http://game-catalog-service:8002
      - REVIEW_SERVICE_URL=http://review-service:8003
      - SHOPPING_SERVICE_URL=http://shopping-service:8004
      - PURCHASE_SERVICE_URL=http://purchase-service:8005
      - PAYMENT_SERVICE_URL=http://payment-service:8006
      - ONLINE_SERVICE_URL=http://online-service:8007
      - SOCIAL_SERVICE_URL=http://social-service:8008
      - NOTIFICATION_SERVICE_URL=http://notification-service:8009
      - RECOMMENDATION_SERVICE_URL=http://recommendation-service:8010
      - ACHIEVEMENT_SERVICE_URL=http://achievement-service:8011
      - REDIS_URL=redis://redis:6379
    ports:
      - "8000:8000"
    networks:
      - steam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Production User Service
  user-service:
    image: ${REGISTRY}/${IMAGE_NAME}:latest
    container_name: steam-user-service-prod
    environment:
      - USER_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/user_service
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - steam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Add other services as needed...

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  steam-network:
    driver: bridge